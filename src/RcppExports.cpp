// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// gng_cpp
List gng_cpp(NumericMatrix x, int max_iterations, float epsilon_b, float epsilon_n, int age_max, int max_nodes, int lambda, float alpha, float beta, bool verbose);
RcppExport SEXP GNG_gng_cpp(SEXP xSEXP, SEXP max_iterationsSEXP, SEXP epsilon_bSEXP, SEXP epsilon_nSEXP, SEXP age_maxSEXP, SEXP max_nodesSEXP, SEXP lambdaSEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type max_iterations(max_iterationsSEXP);
    Rcpp::traits::input_parameter< float >::type epsilon_b(epsilon_bSEXP);
    Rcpp::traits::input_parameter< float >::type epsilon_n(epsilon_nSEXP);
    Rcpp::traits::input_parameter< int >::type age_max(age_maxSEXP);
    Rcpp::traits::input_parameter< int >::type max_nodes(max_nodesSEXP);
    Rcpp::traits::input_parameter< int >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< float >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< float >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(gng_cpp(x, max_iterations, epsilon_b, epsilon_n, age_max, max_nodes, lambda, alpha, beta, verbose));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"GNG_gng_cpp", (DL_FUNC) &GNG_gng_cpp, 10},
    {NULL, NULL, 0}
};

RcppExport void R_init_GNG(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
